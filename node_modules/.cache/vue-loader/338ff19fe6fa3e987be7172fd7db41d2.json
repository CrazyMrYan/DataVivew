{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration9\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration9\\src\\main.vue","mtime":1589870976081},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js","mtime":1585106718819},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js","mtime":1588730776092}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnCgppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcKCmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJwoKaW1wb3J0IHsgZmFkZSB9IGZyb20gJ0BqaWFtaW5naGkvY29sb3InCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjknLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gKFtdKQogICAgfSwKICAgIGR1cjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDMKICAgIH0KICB9LAogIGRhdGEgKCkgewogICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKQogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnZGVjb3JhdGlvbi05JywKCiAgICAgIHBvbHlnb25JZDogYGRlY29yYXRpb24tOS1wb2x5Z29uLSR7dGltZXN0YW1wfWAsCgogICAgICBzdmdXSDogWzEwMCwgMTAwXSwKCiAgICAgIHN2Z1NjYWxlOiBbMSwgMV0sCgogICAgICBkZWZhdWx0Q29sb3I6IFsncmdiYSgzLCAxNjYsIDIyNCwgMC44KScsICdyZ2JhKDMsIDE2NiwgMjI0LCAwLjUpJ10sCgogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjb2xvciAoKSB7CiAgICAgIGNvbnN0IHsgbWVyZ2VDb2xvciB9ID0gdGhpcwoKICAgICAgbWVyZ2VDb2xvcigpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZnRlckF1dG9SZXNpemVNaXhpbkluaXQgKCkgewogICAgICBjb25zdCB7IGNhbGNTY2FsZSB9ID0gdGhpcwoKICAgICAgY2FsY1NjYWxlKCkKICAgIH0sCiAgICBjYWxjU2NhbGUgKCkgewogICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIHN2Z1dIIH0gPSB0aGlzCgogICAgICBjb25zdCBbdywgaF0gPSBzdmdXSAoKICAgICAgdGhpcy5zdmdTY2FsZSA9IFt3aWR0aCAvIHcsIGhlaWdodCAvIGhdCiAgICB9LAogICAgb25SZXNpemUgKCkgewogICAgICBjb25zdCB7IGNhbGNTY2FsZSB9ID0gdGhpcwoKICAgICAgY2FsY1NjYWxlKCkKICAgIH0sCiAgICBtZXJnZUNvbG9yICgpIHsKICAgICAgY29uc3QgeyBjb2xvciwgZGVmYXVsdENvbG9yIH0gPSB0aGlzCgogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSkKICAgIH0sCiAgICBmYWRlCiAgfSwKICBtb3VudGVkICgpIHsKICAgIGNvbnN0IHsgbWVyZ2VDb2xvciB9ID0gdGhpcwoKICAgIG1lcmdlQ29sb3IoKQogIH0KfQo="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration9/src","sourcesContent":["<template>\n  <div class=\"dv-decoration-9\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n      <defs>\n        <polygon :id=\"polygonId\" points=\"15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5\" />\n      </defs>\n\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"45\"\n        fill=\"transparent\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"10\"\n        stroke-dasharray=\"80, 100, 30, 100\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          values=\"0 50 50;360 50 50\"\n          :dur=\"`${dur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"45\"\n        fill=\"transparent\"\n        :stroke=\"mergedColor[0]\"\n        stroke-width=\"6\"\n        stroke-dasharray=\"50, 66, 100, 66\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          values=\"0 50 50;-360 50 50\"\n          :dur=\"`${dur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"38\"\n        fill=\"transparent\"\n        :stroke=\"fade(mergedColor[1] || defaultColor[1], 30)\"\n        stroke-width=\"1\"\n        stroke-dasharray=\"5, 1\"\n      />\n\n      <use\n        v-for=\"(foo, i) in new Array(20).fill(0)\"\n        :key=\"i\"\n        :xlink:href=\"`#${polygonId}`\"\n        :stroke=\"mergedColor[1]\"\n        :fill=\"Math.random() > 0.4 ? 'transparent' : mergedColor[0]\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          values=\"0 50 50;360 50 50\"\n          :dur=\"`${dur}s`\"\n          :begin=\"`${i * dur / 20}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </use>\n\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"26\"\n        fill=\"transparent\"\n        :stroke=\"fade(mergedColor[1] || defaultColor[1], 30)\"\n        stroke-width=\"1\"\n        stroke-dasharray=\"5, 1\"\n      />\n    </svg>\n\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { fade } from '@jiaminghi/color'\n\nexport default {\n  name: 'DvDecoration9',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    dur: {\n      type: Number,\n      default: 3\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: 'decoration-9',\n\n      polygonId: `decoration-9-polygon-${timestamp}`,\n\n      svgWH: [100, 100],\n\n      svgScale: [1, 1],\n\n      defaultColor: ['rgba(3, 166, 224, 0.8)', 'rgba(3, 166, 224, 0.5)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcScale } = this\n\n      calcScale()\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcScale } = this\n\n      calcScale()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    },\n    fade\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}