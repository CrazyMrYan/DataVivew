{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration3\\src\\main.vue","mtime":1589870976081},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js","mtime":1585106718819},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js","mtime":1588730776092}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhdXRvUmVzaXplIGZyb20gJy4uLy4uLy4uL21peGluL2F1dG9SZXNpemUnCgppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCcKCmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkRlY29yYXRpb24zJywKICBtaXhpbnM6IFthdXRvUmVzaXplXSwKICBwcm9wczogewogICAgY29sb3I6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IChbXSkKICAgIH0KICB9LAogIGRhdGEgKCkgewogICAgY29uc3QgcG9pbnRTaWRlTGVuZ3RoID0gNwoKICAgIHJldHVybiB7CiAgICAgIHJlZjogJ2RlY29yYXRpb24tMycsCgogICAgICBzdmdXSDogWzMwMCwgMzVdLAoKICAgICAgc3ZnU2NhbGU6IFsxLCAxXSwKCiAgICAgIHJvd051bTogMiwKICAgICAgcm93UG9pbnRzOiAyNSwKCiAgICAgIHBvaW50U2lkZUxlbmd0aCwKICAgICAgaGFsZlBvaW50U2lkZUxlbmd0aDogcG9pbnRTaWRlTGVuZ3RoIC8gMiwKCiAgICAgIHBvaW50czogW10sCgogICAgICBkZWZhdWx0Q29sb3I6IFsnIzdhY2FlYycsICd0cmFuc3BhcmVudCddLAoKICAgICAgbWVyZ2VkQ29sb3I6IFtdCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY29sb3IgKCkgewogICAgICBjb25zdCB7IG1lcmdlQ29sb3IgfSA9IHRoaXMKCiAgICAgIG1lcmdlQ29sb3IoKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0ICgpIHsKICAgICAgY29uc3QgeyBjYWxjU1ZHRGF0YSB9ID0gdGhpcwoKICAgICAgY2FsY1NWR0RhdGEoKQogICAgfSwKICAgIGNhbGNTVkdEYXRhICgpIHsKICAgICAgY29uc3QgeyBjYWxjUG9pbnRzUG9zaXRpb24sIGNhbGNTY2FsZSB9ID0gdGhpcwoKICAgICAgY2FsY1BvaW50c1Bvc2l0aW9uKCkKCiAgICAgIGNhbGNTY2FsZSgpCiAgICB9LAogICAgY2FsY1BvaW50c1Bvc2l0aW9uICgpIHsKICAgICAgY29uc3QgeyBzdmdXSCwgcm93TnVtLCByb3dQb2ludHMgfSA9IHRoaXMKCiAgICAgIGNvbnN0IFt3LCBoXSA9IHN2Z1dICgogICAgICBjb25zdCBob3Jpem9udGFsR2FwID0gdyAvIChyb3dQb2ludHMgKyAxKQogICAgICBjb25zdCB2ZXJ0aWNhbEdhcCA9IGggLyAocm93TnVtICsgMSkKCiAgICAgIGxldCBwb2ludHMgPSBuZXcgQXJyYXkocm93TnVtKS5maWxsKDApLm1hcCgoZm9vLCBpKSA9PgogICAgICAgIG5ldyBBcnJheShyb3dQb2ludHMpLmZpbGwoMCkubWFwKChmb28sIGopID0+IFsKICAgICAgICAgIGhvcml6b250YWxHYXAgKiAoaiArIDEpLCB2ZXJ0aWNhbEdhcCAqIChpICsgMSkKICAgICAgICBdKSkKCiAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzLnJlZHVjZSgoYWxsLCBpdGVtKSA9PiBbLi4uYWxsLCAuLi5pdGVtXSwgW10pCiAgICB9LAogICAgY2FsY1NjYWxlICgpIHsKICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCBzdmdXSCB9ID0gdGhpcwoKICAgICAgY29uc3QgW3csIGhdID0gc3ZnV0gKCiAgICAgIHRoaXMuc3ZnU2NhbGUgPSBbd2lkdGggLyB3LCBoZWlnaHQgLyBoXQogICAgfSwKICAgIG9uUmVzaXplICgpIHsKICAgICAgY29uc3QgeyBjYWxjU1ZHRGF0YSB9ID0gdGhpcwoKICAgICAgY2FsY1NWR0RhdGEoKQogICAgfSwKICAgIG1lcmdlQ29sb3IgKCkgewogICAgICBjb25zdCB7IGNvbG9yLCBkZWZhdWx0Q29sb3IgfSA9IHRoaXMKCiAgICAgIHRoaXMubWVyZ2VkQ29sb3IgPSBkZWVwTWVyZ2UoZGVlcENsb25lKGRlZmF1bHRDb2xvciwgdHJ1ZSksIGNvbG9yIHx8IFtdKQogICAgfQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICBjb25zdCB7IG1lcmdlQ29sb3IgfSA9IHRoaXMKCiAgICBtZXJnZUNvbG9yKCkKICB9Cn0K"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration3/src","sourcesContent":["<template>\n  <div class=\"dv-decoration-3\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n\n      <template\n        v-for=\"(point, i) in points\"\n      >\n        <rect\n          :key=\"i\"\n          :fill=\"mergedColor[0]\"\n          :x=\"point[0] - halfPointSideLength\"\n          :y=\"point[1] - halfPointSideLength\"\n          :width=\"pointSideLength\"\n          :height=\"pointSideLength\"\n        >\n          <animate\n            v-if=\"Math.random() > 0.6\"\n            attributeName=\"fill\"\n            :values=\"`${mergedColor.join(';')}`\"\n            :dur=\"Math.random() + 1 + 's'\"\n            :begin=\"Math.random() * 2\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration3',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const pointSideLength = 7\n\n    return {\n      ref: 'decoration-3',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 2,\n      rowPoints: 25,\n\n      pointSideLength,\n      halfPointSideLength: pointSideLength / 2,\n\n      points: [],\n\n      defaultColor: ['#7acaec', 'transparent'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}