{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\conicalColumnChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\conicalColumnChart\\src\\main.vue","mtime":1589870976081},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js","mtime":1585106718819},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js","mtime":1588730776092}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL1x1NjVCMFx1NUVGQVx1NjU4N1x1NEVGNlx1NTkzOS9EYXRhVml2ZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXV0b1Jlc2l6ZSBmcm9tICcuLi8uLi8uLi9taXhpbi9hdXRvUmVzaXplJzsKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZDb25pY2FsQ29sdW1uQ2hhcnQnLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb25maWc6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZWY6ICdjb25pY2FsLWNvbHVtbi1jaGFydCcsCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgZGF0YQogICAgICAgICAqIEB0eXBlIHtBcnJheTxPYmplY3Q+fQogICAgICAgICAqIEBkZWZhdWx0IGRhdGEgPSBbXQogICAgICAgICAqLwogICAgICAgIGRhdGE6IFtdLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgaW1nCiAgICAgICAgICogQHR5cGUge0FycmF5PFN0cmluZz59CiAgICAgICAgICogQGRlZmF1bHQgaW1nID0gW10KICAgICAgICAgKi8KICAgICAgICBpbWc6IFtdLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgZm9udCBzaXplCiAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgKiBAZGVmYXVsdCBmb250U2l6ZSA9IDEyCiAgICAgICAgICovCiAgICAgICAgZm9udFNpemU6IDEyLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gSW1nIHNpZGUgbGVuZ3RoCiAgICAgICAgICogQHR5cGUge051bWJlcn0KICAgICAgICAgKiBAZGVmYXVsdCBpbWdTaWRlTGVuZ3RoID0gMzAKICAgICAgICAgKi8KICAgICAgICBpbWdTaWRlTGVuZ3RoOiAzMCwKCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENvbHVtbiBjb2xvcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgY29sdW1uQ29sb3IgPSAncmdiYSgwLCAxOTQsIDI1NSwgMC40KScKICAgICAgICAgKi8KICAgICAgICBjb2x1bW5Db2xvcjogJ3JnYmEoMCwgMTk0LCAyNTUsIDAuNCknLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBjb2xvcgogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdGV4dENvbG9yID0gJyNmZmYnCiAgICAgICAgICovCiAgICAgICAgdGV4dENvbG9yOiAnI2ZmZicsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBTaG93IHZhbHVlCiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICogQGRlZmF1bHQgc2hvd1ZhbHVlID0gZmFsc2UKICAgICAgICAgKi8KICAgICAgICBzaG93VmFsdWU6IGZhbHNlCiAgICAgIH0sCiAgICAgIG1lcmdlZENvbmZpZzogbnVsbCwKICAgICAgY29sdW1uOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIGNhbGNEYXRhID0gdGhpcy5jYWxjRGF0YTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdDogZnVuY3Rpb24gYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfSwKICAgIG9uUmVzaXplOiBmdW5jdGlvbiBvblJlc2l6ZSgpIHsKICAgICAgdmFyIGNhbGNEYXRhID0gdGhpcy5jYWxjRGF0YTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0sCiAgICBjYWxjRGF0YTogZnVuY3Rpb24gY2FsY0RhdGEoKSB7CiAgICAgIHZhciBtZXJnZUNvbmZpZyA9IHRoaXMubWVyZ2VDb25maWcsCiAgICAgICAgICBpbml0RGF0YSA9IHRoaXMuaW5pdERhdGEsCiAgICAgICAgICBjYWxjU1ZHUGF0aCA9IHRoaXMuY2FsY1NWR1BhdGg7CiAgICAgIG1lcmdlQ29uZmlnKCk7CiAgICAgIGluaXREYXRhKCk7CiAgICAgIGNhbGNTVkdQYXRoKCk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZywKICAgICAgICAgIGNvbmZpZyA9IHRoaXMuY29uZmlnOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgaW5pdERhdGE6IGZ1bmN0aW9uIGluaXREYXRhKCkgewogICAgICB2YXIgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIHZhciBkYXRhID0gbWVyZ2VkQ29uZmlnLmRhdGE7CiAgICAgIGRhdGEgPSBkZWVwQ2xvbmUoZGF0YSwgdHJ1ZSk7CiAgICAgIGRhdGEuc29ydChmdW5jdGlvbiAoX3JlZiwgX3JlZjIpIHsKICAgICAgICB2YXIgYSA9IF9yZWYudmFsdWU7CiAgICAgICAgdmFyIGIgPSBfcmVmMi52YWx1ZTsKICAgICAgICBpZiAoYSA+IGIpIHJldHVybiAtMTsKICAgICAgICBpZiAoYSA8IGIpIHJldHVybiAxOwogICAgICAgIGlmIChhID09PSBiKSByZXR1cm4gMDsKICAgICAgfSk7CiAgICAgIHZhciBtYXggPSBkYXRhWzBdID8gZGF0YVswXS52YWx1ZSA6IDEwOwogICAgICBkYXRhID0gZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwge30sIHsKICAgICAgICAgIHBlcmNlbnQ6IGl0ZW0udmFsdWUgLyBtYXgKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIG1lcmdlZENvbmZpZy5kYXRhID0gZGF0YTsKICAgIH0sCiAgICBjYWxjU1ZHUGF0aDogZnVuY3Rpb24gY2FsY1NWR1BhdGgoKSB7CiAgICAgIHZhciBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZywKICAgICAgICAgIHdpZHRoID0gdGhpcy53aWR0aCwKICAgICAgICAgIGhlaWdodCA9IHRoaXMuaGVpZ2h0OwogICAgICB2YXIgaW1nU2lkZUxlbmd0aCA9IG1lcmdlZENvbmZpZy5pbWdTaWRlTGVuZ3RoLAogICAgICAgICAgZm9udFNpemUgPSBtZXJnZWRDb25maWcuZm9udFNpemUsCiAgICAgICAgICBkYXRhID0gbWVyZ2VkQ29uZmlnLmRhdGE7CiAgICAgIHZhciBpdGVtTnVtID0gZGF0YS5sZW5ndGg7CiAgICAgIHZhciBnYXAgPSB3aWR0aCAvIChpdGVtTnVtICsgMSk7CiAgICAgIHZhciB1c2VBYmxlSGVpZ2h0ID0gaGVpZ2h0IC0gaW1nU2lkZUxlbmd0aCAtIGZvbnRTaXplIC0gNTsKICAgICAgdmFyIHN2Z0JvdHRvbSA9IGhlaWdodCAtIGZvbnRTaXplIC0gNTsKICAgICAgdGhpcy5jb2x1bW4gPSBkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSwgaSkgewogICAgICAgIHZhciBwZXJjZW50ID0gaXRlbS5wZXJjZW50OwogICAgICAgIHZhciBtaWRkbGVYUG9zID0gZ2FwICogKGkgKyAxKTsKICAgICAgICB2YXIgbGVmdFhQb3MgPSBnYXAgKiBpOwogICAgICAgIHZhciByaWdodFhwb3MgPSBnYXAgKiAoaSArIDIpOwogICAgICAgIHZhciBtaWRkbGVZUG9zID0gc3ZnQm90dG9tIC0gdXNlQWJsZUhlaWdodCAqIHBlcmNlbnQ7CiAgICAgICAgdmFyIGNvbnRyb2xZUG9zID0gdXNlQWJsZUhlaWdodCAqIHBlcmNlbnQgKiAwLjYgKyBtaWRkbGVZUG9zOwogICAgICAgIHZhciBkID0gIlxuICAgICAgICAgIE0iLmNvbmNhdChsZWZ0WFBvcywgIiwgIikuY29uY2F0KHN2Z0JvdHRvbSwgIlxuICAgICAgICAgIFEiKS5jb25jYXQobWlkZGxlWFBvcywgIiwgIikuY29uY2F0KGNvbnRyb2xZUG9zLCAiICIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCIpLmNvbmNhdChtaWRkbGVZUG9zLCAiXG4gICAgICAgICAgTSIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCIpLmNvbmNhdChtaWRkbGVZUG9zLCAiXG4gICAgICAgICAgUSIpLmNvbmNhdChtaWRkbGVYUG9zLCAiLCAiKS5jb25jYXQoY29udHJvbFlQb3MsICIgIikuY29uY2F0KHJpZ2h0WHBvcywgIiwiKS5jb25jYXQoc3ZnQm90dG9tLCAiXG4gICAgICAgICAgTCIpLmNvbmNhdChsZWZ0WFBvcywgIiwgIikuY29uY2F0KHN2Z0JvdHRvbSwgIlxuICAgICAgICAgIFpcbiAgICAgICAgIik7CiAgICAgICAgdmFyIHRleHRZID0gKHN2Z0JvdHRvbSArIG1pZGRsZVlQb3MpIC8gMiArIGZvbnRTaXplIC8gMjsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKSwge30sIHsKICAgICAgICAgIGQ6IGQsCiAgICAgICAgICB4OiBtaWRkbGVYUG9zLAogICAgICAgICAgeTogbWlkZGxlWVBvcywKICAgICAgICAgIHRleHRZOiB0ZXh0WQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-conical-column-chart\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <g\n        v-for=\"(item, i) in column\"\n        :key=\"i\"\n      >\n        <path\n          :d=\"item.d\"\n          :fill=\"mergedConfig.columnColor\"\n        />\n        <text\n          :style=\"`fontSize:${mergedConfig.fontSize}px`\"\n          :fill=\"mergedConfig.textColor\"\n          :x=\"item.x\"\n          :y=\"height - 4\"\n        >\n          {{ item.name }}\n        </text>\n        <image\n          v-if=\"mergedConfig.img.length\"\n          :xlink:href=\"mergedConfig.img[i % mergedConfig.img.length]\"\n          :width=\"mergedConfig.imgSideLength\"\n          :height=\"mergedConfig.imgSideLength\"\n          :x=\"item.x - mergedConfig.imgSideLength / 2\"\n          :y=\"item.y - mergedConfig.imgSideLength\"\n        />\n        <text\n          v-if=\"mergedConfig.showValue\"\n          :style=\"`fontSize:${mergedConfig.fontSize}px`\"\n          :fill=\"mergedConfig.textColor\"\n          :x=\"item.x\"\n          :y=\"item.textY\"\n        >\n          {{ item.value }}\n        </text>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvConicalColumnChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'conical-column-chart',\n\n      defaultConfig: {\n        /**\n         * @description Chart data\n         * @type {Array<Object>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Chart img\n         * @type {Array<String>}\n         * @default img = []\n         */\n        img: [],\n        /**\n         * @description Chart font size\n         * @type {Number}\n         * @default fontSize = 12\n         */\n        fontSize: 12,\n        /**\n         * @description Img side length\n         * @type {Number}\n         * @default imgSideLength = 30\n         */\n        imgSideLength: 30,\n        /**\n         * @description Column color\n         * @type {String}\n         * @default columnColor = 'rgba(0, 194, 255, 0.4)'\n         */\n        columnColor: 'rgba(0, 194, 255, 0.4)',\n        /**\n         * @description Text color\n         * @type {String}\n         * @default textColor = '#fff'\n         */\n        textColor: '#fff',\n        /**\n         * @description Show value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      column: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    calcData () {\n      const { mergeConfig, initData, calcSVGPath } = this\n\n      mergeConfig()\n\n      initData()\n\n      calcSVGPath()\n    },\n    mergeConfig () {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    initData () {\n      const { mergedConfig } = this\n      let { data } = mergedConfig\n\n      data = deepClone(data, true)\n\n      data.sort(({ value: a }, { value: b }) => {\n        if (a > b) return -1\n        if (a < b) return 1\n        if (a === b) return 0\n      })\n\n      const max = data[0] ? data[0].value : 10\n\n      data = data.map(item => ({\n        ...item,\n        percent: item.value / max\n      }))\n\n      mergedConfig.data = data\n    },\n    calcSVGPath () {\n      const { mergedConfig, width, height } = this\n\n      const { imgSideLength, fontSize, data } = mergedConfig\n\n      const itemNum = data.length\n      const gap = width / (itemNum + 1)\n\n      const useAbleHeight = height - imgSideLength - fontSize - 5\n      const svgBottom = height - fontSize - 5\n\n      this.column = data.map((item, i) => {\n        const { percent } = item\n\n        const middleXPos = gap * (i + 1)\n        const leftXPos = gap * i\n        const rightXpos = gap * (i + 2)\n\n        const middleYPos = svgBottom - useAbleHeight * percent\n        const controlYPos = useAbleHeight * percent * 0.6 + middleYPos\n\n        const d = `\n          M${leftXPos}, ${svgBottom}\n          Q${middleXPos}, ${controlYPos} ${middleXPos},${middleYPos}\n          M${middleXPos},${middleYPos}\n          Q${middleXPos}, ${controlYPos} ${rightXpos},${svgBottom}\n          L${leftXPos}, ${svgBottom}\n          Z\n        `\n\n        const textY = (svgBottom + middleYPos) / 2 + fontSize / 2\n\n        return {\n          ...item,\n          d,\n          x: middleXPos,\n          y: middleYPos,\n          textY\n        }\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/conicalColumnChart/src"}]}