{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChartEnhanced\\src\\main.vue","mtime":1589870976081},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\babel-loader\\lib\\index.js","mtime":1585106718819},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577779768247},{"path":"C:\\Users\\Administrator\\Desktop\\新建文件夹\\DataVivew\\node_modules\\vue-loader\\lib\\index.js","mtime":1588730776092}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,SAAA,YAAA,EAAA,gBAAA,QAAA,qBAAA;AAEA,OAAA,UAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,QAAA,SAAA,GAAA,IAAA,CAAA,GAAA,EAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,2BADA;AAEA,MAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAFA;AAGA,MAAA,iBAAA,gCAAA,SAAA,CAHA;AAIA,MAAA,cAAA,6BAAA,SAAA,CAJA;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,MAAA,aAAA,EAAA;AACA;;;;;AAKA,QAAA,MAAA,EAAA,EANA;;AAOA;;;;;AAKA,QAAA,KAAA,EAAA,EAZA;;AAaA;;;;AAIA,QAAA,IAAA,EAAA;AACA;;;;;AAKA,UAAA,IAAA,EAAA,KANA;;AAOA;;;;AAIA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAXA;;AAYA;;;;;AAKA,UAAA,KAAA,EAAA,SAjBA;;AAkBA;;;;;AAKA,UAAA,MAAA,EAAA;AAvBA,SAjBA;;AA0CA;;;;AAIA,QAAA,IAAA,EAAA;AACA;;;;;AAKA,UAAA,IAAA,EAAA,KANA;;AAOA;;;;;AAKA,UAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAZA;;AAaA;;;;;AAKA,UAAA,KAAA,EAAA,SAlBA;;AAmBA;;;;;AAKA,UAAA,QAAA,EAAA;AAxBA,SA9CA;;AAwEA;;;;AAIA,QAAA,IAAA,EAAA;AACA;;;;;AAKA,UAAA,IAAA,EAAA,KANA;;AAOA;;;;;AAKA,UAAA,GAAA,EAAA,EAZA;;AAaA;;;;;AAKA,UAAA,KAAA,EAAA,EAlBA;;AAmBA;;;;;AAKA,UAAA,MAAA,EAAA;AAxBA,SA5EA;;AAsGA;;;;AAIA,QAAA,IAAA,EAAA;AACA;;;;;AAKA,UAAA,KAAA,EAAA,CANA;;AAOA;;;;;AAKA,UAAA,KAAA,EAAA,SAZA;;AAaA;;;;;AAKA,UAAA,UAAA,EAAA,yBAlBA;;AAmBA;;;;;AAKA,UAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAxBA;;AAyBA;;;;;AAKA,UAAA,MAAA,EAAA;AA9BA,SA1GA;;AA0IA;;;;;AAKA,QAAA,QAAA,EAAA,EA/IA;;AAgJA;;;;;;AAMA,QAAA,CAAA,EAAA,CAAA,GAtJA;;AAuJA;;;;;AAKA,QAAA,SAAA,EAAA,CA5JA;;AA6JA;;;;;AAKA,QAAA,QAAA,EAAA;AAlKA,OAxDA;;AA4NA;;;;;AAKA,MAAA,QAAA,EAAA,EAjOA;;AAkOA;;;;;AAKA,MAAA,cAAA,EAAA,EAvOA;;AAwOA;;;;AAIA,MAAA,aAAA,EAAA,EA5OA;AA8OA,MAAA,YAAA,EAAA;AA9OA,KAAA;AAgPA,GA/PA;AAgQA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,QAAA;AACA;AALA,GAhQA;AAuQA,EAAA,OAAA,EAAA;AACA,IAAA,wBADA,sCACA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,QAAA;AACA,KALA;AAMA,IAAA,QANA,sBAMA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,QAAA;AACA,KAVA;AAWA,IAAA,QAXA,sBAWA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,WADA,GACA,KADA,CACA,WADA,EACA,iBADA,GACA,KADA,CACA,iBADA,EACA,aADA,GACA,KADA,CACA,aADA;AAGA,gBAAA,WAAA;AAEA,gBAAA,iBAAA;AAEA,gBAAA,aAAA;AAEA,gBAAA,eATA,GASA,KATA,CASA,eATA;AAAA;AAAA,uBAWA,eAAA,EAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAvBA;AAwBA,IAAA,WAxBA,yBAwBA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,aADA,GACA,IADA,CACA,aADA;AAGA,UAAA,YAAA,GAAA,SAAA,CAAA,SAAA,CAAA,aAAA,EAAA,IAAA,CAAA,EAAA,MAAA,IAAA,EAAA,CAAA;AAHA,UAKA,MALA,GAKA,YALA,CAKA,MALA;AAAA,UAKA,KALA,GAKA,YALA,CAKA,KALA;AAAA,UAKA,IALA,GAKA,YALA,CAKA,IALA;AAAA,UAKA,IALA,GAKA,YALA,CAKA,IALA;AAAA,UAKA,IALA,GAKA,YALA,CAKA,IALA;AAAA,UAKA,IALA,GAKA,YALA,CAKA,IALA;AAOA,MAAA,YAAA,CAAA,MAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AAEA,eAAA,IAAA;AACA,OANA,CAAA;AAQA,MAAA,YAAA,CAAA,KAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA;AACA,OAFA,CAAA;AAIA,WAAA,YAAA,GAAA,YAAA;AACA,KA5CA;AA6CA,IAAA,iBA7CA,+BA6CA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UAGA,QAHA,GAGA,YAHA,CAGA,QAHA;AAAA,UAGA,MAHA,GAGA,YAHA,CAGA,MAHA;AAKA,WAAA,aAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AAAA,8CACA,IADA,CACA,UADA;AAAA,YACA,CADA;AAAA,YACA,CADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;AAAA,YACA,IADA,GACA,IADA,CACA,IADA;;AAGA,YAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,KAAA,EAAA,CAAA,GAAA,MAAA,CAAA;AAEA,QAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,IAAA,CAAA,QAAA,KAAA,EAAA;AALA,YAOA,EAPA,GAOA,IAPA,CAOA,KAPA;AAAA,YAOA,EAPA,GAOA,IAPA,CAOA,MAPA;AAQA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AATA,0CAWA,IAAA,CAAA,MAXA;AAAA,YAWA,EAXA;AAAA,YAWA,EAXA;;AAYA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA;AAEA,QAAA,IAAA,CAAA,GAAA,aAAA,IAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,CAAA;AAEA,eAAA,IAAA;AACA,OAlBA,CAAA;AAmBA,KArEA;AAsEA,IAAA,aAtEA,2BAsEA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UAGA,MAHA,GAGA,YAHA,CAGA,MAHA;AAAA,UAGA,KAHA,GAGA,YAHA,CAGA,KAHA;AAKA,WAAA,QAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAAA,YACA,MADA,GACA,IADA,CACA,MADA;AAAA,YACA,MADA,GACA,IADA,CACA,MADA;AAAA,YACA,QADA,GACA,IADA,CACA,QADA;AAGA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,QAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AACA,YAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,SAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,MAAA;AAAA,SAAA,EAAA,UAAA;AAEA,YAAA,IAAA,GAAA,OAAA,CAAA,WAAA,EAAA,WAAA,CAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,UAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AAAA,WAAA,CAAA;AAAA,SAAA,CAAA;AACA,YAAA,CAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,eAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,cAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,GAAA,iBAAA,IAAA,CAAA,QAAA,EAAA,CAAA;AACA,YAAA,IAAA,GAAA,YAAA,MAAA,4BAAA,QAAA,KAAA,EAAA;AAEA,+CAAA,IAAA;AAAA,UAAA,IAAA,EAAA,IAAA;AAAA,UAAA,GAAA,EAAA,GAAA;AAAA,UAAA,CAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AACA,OAZA,CAAA;AAaA,KAxFA;AAyFA,IAAA,OAzFA,mBAyFA,KAzFA,EAyFA,GAzFA,EAyFA;AAAA,UACA,eADA,GACA,IADA,CACA,eADA;AAGA,UAAA,YAAA,GAAA,eAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AAEA,aAAA,CAAA,KAAA,EAAA,YAAA,EAAA,GAAA,CAAA;AACA,KA/FA;AAgGA,IAAA,eAhGA,yCAgGA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AAAA,UACA,gBADA,GACA,IADA,CACA,gBADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UAGA,SAHA,GAGA,YAHA,CAGA,SAHA;AAAA,UAGA,CAHA,GAGA,YAHA,CAGA,CAHA;AAAA,UAKA,EALA,GAKA,CAAA,EAAA,GAAA,EAAA,IAAA,CALA;AAAA,UAKA,EALA,GAKA,CAAA,EAAA,GAAA,EAAA,IAAA,CALA;AAOA,UAAA,QAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;AAEA,UAAA,YAAA,GAAA,QAAA,GAAA,SAAA;AACA,UAAA,QAAA,GAAA,YAAA,GAAA,CAAA;AAVA,UAYA,EAZA,GAYA,EAZA;AAAA,UAYA,EAZA,GAYA,EAZA;;AAcA,SAAA;AACA,QAAA,EAAA,IAAA,QAAA;AACA,QAAA,EAAA,GAAA,gBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAHA,QAGA,gBAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,GAAA,YAHA;;AAKA,aAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA,KApHA;AAqHA,IAAA,gBArHA,4BAqHA,CArHA,SAqHA,CArHA,EAqHA;AAAA;AAAA,UAAA,EAAA;AAAA,UAAA,EAAA;;AACA,UAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA;AAEA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KAzHA;AA0HA,IAAA,eA1HA,6BA0HA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,SADA,GACA,MADA,CACA,SADA,EACA,QADA,GACA,MADA,CACA,QADA,EACA,KADA,GACA,MADA,CACA,KADA;AAAA;AAAA,uBAGA,SAAA,EAHA;;AAAA;AAKA,gBAAA,MAAA,CAAA,cAAA,GAAA,QAAA,CAAA,GAAA,CAAA;AAAA,sBAAA,GAAA,SAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA;AAAA,iBAAA,CAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAhIA;AAiIA,IAAA,eAjIA,mCAiIA;AAAA,UAAA,OAAA,UAAA,OAAA;AAAA,UAAA,OAAA,UAAA,OAAA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAGA,UAAA,CAAA,GAAA,EAAA;AAEA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,CAAA,OAAA,GAAA,MAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA,CAAA,IAAA,gEAAA,OAAA,eAAA,OAAA,wCAAA,SAAA,eAAA,SAAA;AACA;AA1IA;AAvQA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart-enhanced\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgSrc : ''})`\"\n    :ref=\"ref\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"flylines.length\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"flylineGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"haloGradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n      </defs>\n\n      <!-- points -->\n      <g v-for=\"point in flylinePoints\" :key=\"point.key + Math.random()\">\n        <defs>\n          <circle\n            v-if=\"point.halo.show\"\n            :id=\"`halo${unique}${point.key}`\"\n            :cx=\"point.coordinate[0]\"\n            :cy=\"point.coordinate[1]\"\n          >\n            <animate\n              attributeName=\"r\"\n              :values=\"`1;${point.halo.radius}`\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              :dur=\"`${point.halo.time}s`\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </defs>\n\n        <!-- halo gradient mask -->\n        <mask :id=\"`mask${unique}${point.key}`\">\n          <use\n            v-if=\"point.halo.show\"\n            :xlink:href=\"`#halo${unique}${point.key}`\"\n            :fill=\"`url(#${haloGradientId})`\"\n          />\n        </mask>\n\n        <!-- point halo -->\n        <use\n          v-if=\"point.halo.show\"\n          :xlink:href=\"`#halo${unique}${point.key}`\"\n          :fill=\"point.halo.color\"\n          :mask=\"`url(#mask${unique}${point.key})`\"\n        />\n\n        <!-- point icon -->\n        <image\n          v-if=\"point.icon.show\"\n          :xlink:href=\"point.icon.src\"\n          :width=\"point.icon.width\"\n          :height=\"point.icon.height\"\n          :x=\"point.icon.x\"\n          :y=\"point.icon.y\"\n        />\n\n        <!-- point text -->\n        <text\n          v-if=\"point.text.show\"\n          :style=\"`fontSize:${point.text.fontSize}px;color:${point.text.color}`\"\n          :fill=\"point.text.color\"\n          :x=\"point.text.x\"\n          :y=\"point.text.y\"\n        >\n          {{ point.name }}\n        </text>\n      </g>\n\n      <!-- flylines -->\n      <g v-for=\"(line, i) in flylines\" :key=\"line.key + Math.random()\">\n        <defs>\n          <path\n            :id=\"line.key\"\n            :ref=\"line.key\"\n            :d=\"line.d\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <!-- orbit line -->\n        <use\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.orbitColor\"\n        />\n\n        <!-- fly line gradient mask -->\n        <mask :id=\"`mask${unique}${line.key}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"line.radius\" :fill=\"`url(#${flylineGradientId})`\">\n            <animateMotion\n              :dur=\"line.time\"\n              :path=\"line.d\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <!-- fly line -->\n        <use\n          v-if=\"flylineLengths[i]\"\n          :xlink:href=\"`#${line.key}`\"\n          :stroke-width=\"line.width\"\n          :stroke=\"line.color\"\n          :mask=\"`url(#mask${unique}${line.key})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${flylineLengths[i]}`\"\n            :to=\"`${flylineLengths[i]}, 0`\"\n            :dur=\"line.time\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChartEnhanced',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const timestamp = Date.now()\n    return {\n      ref: 'dv-flyline-chart-enhanced',\n      unique: Math.random(),\n      flylineGradientId: `flyline-gradient-id-${timestamp}`,\n      haloGradientId: `halo-gradient-id-${timestamp}`,\n      /**\n       * @description Type Declaration\n       * \n       * interface Halo {\n       *    show?: boolean\n       *    duration?: [number, number]\n       *    color?: string\n       *    radius?: number\n       * }\n       * \n       * interface Text {\n       *    show?: boolean\n       *    offset?: [number, number]\n       *    color?: string\n       *    fontSize?: number\n       * }\n       * \n       * interface Icon {\n       *    show?: boolean\n       *    src?: string\n       *    width?: number\n       *    height?: number\n       * }\n       * \n       * interface Point {\n       *    name: string\n       *    coordinate: [number, number]\n       *    halo?: Halo\n       *    text?: Text\n       *    icon?: Icon\n       * }\n       * \n       * interface Line {\n       *    width?: number\n       *    color?: string\n       *    orbitColor?: string\n       *    duration?: [number, number]\n       *    radius?: string\n       * }\n       * \n       * interface Flyline extends Line {\n       *    source: string\n       *    target: string\n       * }\n       * \n       * interface FlylineWithPath extends Flyline {\n       *    d: string\n       *    path: [[number, number], [number, number], [number, number]]\n       *    key: string\n       * }\n       */\n      defaultConfig: {\n        /**\n         * @description Flyline chart points\n         * @type {Point[]}\n         * @default points = []\n         */\n        points: [],\n        /**\n         * @description Lines\n         * @type {Flyline[]}\n         * @default lines = []\n         */\n        lines: [],\n        /**\n         * @description Global halo configuration\n         * @type {Halo}\n         */\n        halo: {\n          /**\n           * @description Whether to show halo\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Halo animation duration (1s = 10)\n           * @type {[number, number]}\n           */\n          duration: [20, 30],\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Global text configuration\n         * @type {Text}\n         */\n        text: {\n          /**\n           * @description Whether to show text\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Text offset\n           * @type {[number, number]}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Global icon configuration\n         * @type {Icon}\n         */\n        icon: {\n          /**\n           * @description Whether to show icon\n           * @type {Boolean}\n           * @default show = false\n           */\n          show: false,\n          /**\n           * @description Icon src\n           * @type {String}\n           * @default src = ''\n           */\n          src: '',\n          /**\n           * @description Icon width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Icon height\n           * @type {Number}\n           * @default width = 15\n           */\n          height: 15\n        },\n        /**\n         * @description Global line configuration\n         * @type {Line}\n         */\n        line: {\n          /**\n           * @description Line width\n           * @type {Number}\n           * @default width = 1\n           */\n          width: 1,\n          /**\n           * @description Flyline color\n           * @type {String}\n           * @default color = '#ffde93'\n           */\n          color: '#ffde93',\n          /**\n           * @description Orbit color\n           * @type {String}\n           * @default orbitColor = 'rgba(103, 224, 227, .2)'\n           */\n          orbitColor: 'rgba(103, 224, 227, .2)',\n          /**\n           * @description Flyline animation duration\n           * @type {[number, number]}\n           * @default duration = [20, 30]\n           */\n          duration: [20, 30],\n          /**\n           * @description Flyline radius\n           * @type {Number}\n           * @default radius = 100\n           */\n          radius: 100\n        },\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgSrc = ''\n         */\n        bgImgSrc: '',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true\n      },\n      /**\n       * @description Fly line data\n       * @type {FlylineWithPath[]}\n       * @default flylines = []\n       */\n      flylines: [],\n      /**\n       * @description Fly line lengths\n       * @type {Number[]}\n       * @default flylineLengths = []\n       */\n      flylineLengths: [],\n      /**\n       * @description Fly line points\n       * @default flylinePoints = []\n       */\n      flylinePoints: [],\n\n      mergedConfig: null\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, calcflylinePoints, calcLinePaths } = this\n\n      mergeConfig()\n\n      calcflylinePoints()\n\n      calcLinePaths()\n\n      const { calcLineLengths } = this\n\n      await calcLineLengths()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points, lines, halo, text, icon, line } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        item.halo = deepMerge(deepClone(halo, true), item.halo || {})\n        item.text = deepMerge(deepClone(text, true), item.text || {})\n        item.icon = deepMerge(deepClone(icon, true), item.icon || {})\n\n        return item\n      })\n\n      mergedConfig.lines = lines.map(item => {\n        return deepMerge(deepClone(line, true), item)\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    calcflylinePoints () {\n      const { mergedConfig, width, height } = this\n\n      const { relative, points } = mergedConfig\n\n      this.flylinePoints = points.map((item, i) => {\n        const { coordinate: [x, y], halo, icon, text } = item\n\n        if (relative) item.coordinate = [x * width, y * height]\n\n        item.halo.time = randomExtend(...halo.duration) / 10\n\n        const { width: iw, height: ih } = icon\n        item.icon.x = item.coordinate[0] - iw / 2\n        item.icon.y = item.coordinate[1] - ih / 2\n\n        const [ox, oy] = text.offset\n        item.text.x = item.coordinate[0] + ox\n        item.text.y = item.coordinate[1] + oy\n\n        item.key = `${item.coordinate.toString()}${i}`\n\n        return item\n      })\n    },\n    calcLinePaths () {\n      const { getPath, mergedConfig } = this\n\n      const { points, lines } = mergedConfig\n\n      this.flylines = lines.map(item => {\n        const { source, target, duration } = item\n\n        const sourcePoint = points.find(({ name }) => name === source).coordinate\n        const targetPoint = points.find(({ name }) => name === target).coordinate\n\n        const path = getPath(sourcePoint, targetPoint).map(item => item.map(v => parseFloat(v.toFixed(10))))\n        const d = `M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\n        const key = `path${path.toString()}`\n        const time = randomExtend(...duration) / 10\n\n        return { ...item, path, key, d, time }\n      })\n    },\n    getPath (start, end) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(start, end)\n\n      return [start, controlPoint, end]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, flylines, $refs } = this\n\n      await $nextTick()\n\n      this.flylineLengths = flylines.map(({ key }) => $refs[key][0].getTotalLength())\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart-enhanced DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChartEnhanced/src"}]}